Index: app/src/main/java/com/example/testnewsapp/categoryFragments/ScienceFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/categoryFragments/ScienceFragment.kt b/app/src/main/java/com/example/testnewsapp/categoryFragments/ScienceFragment.kt
new file mode 100644
--- /dev/null	(date 1641503041721)
+++ b/app/src/main/java/com/example/testnewsapp/categoryFragments/ScienceFragment.kt	(date 1641503041721)
@@ -0,0 +1,41 @@
+package com.example.testnewsapp.categoryFragments
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.annotation.Nullable
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.example.testnewsapp.R
+import com.example.testnewsapp.adapter.NewsAdapter
+import com.example.testnewsapp.models.NewsHeadLines
+import com.example.testnewsapp.RequestManagerForNewsAPI
+import kotlin.collections.ArrayList
+
+class ScienceFragment : Fragment() {
+
+    lateinit var newsHeadLinesArrayList: ArrayList<NewsHeadLines>
+    lateinit var recyclerViewFromScience: RecyclerView;
+    lateinit var newsAdapter: NewsAdapter
+    var category: String = "science"
+
+    @Nullable
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        val view: View = inflater.inflate(R.layout.science_fragment, null)
+        recyclerViewFromScience = view.findViewById(R.id.recycler_view_of_science)
+        newsHeadLinesArrayList = ArrayList()
+        recyclerViewFromScience.layoutManager = LinearLayoutManager(context)
+        newsAdapter = NewsAdapter(context, newsHeadLinesArrayList)
+        recyclerViewFromScience.adapter = newsAdapter
+
+        val manager = RequestManagerForNewsAPI()
+        manager.findNews(context, category, newsHeadLinesArrayList, newsAdapter)
+        return view
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/categoryFragments/BusinessFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/categoryFragments/BusinessFragment.kt b/app/src/main/java/com/example/testnewsapp/categoryFragments/BusinessFragment.kt
new file mode 100644
--- /dev/null	(date 1641503041691)
+++ b/app/src/main/java/com/example/testnewsapp/categoryFragments/BusinessFragment.kt	(date 1641503041691)
@@ -0,0 +1,41 @@
+package com.example.testnewsapp.categoryFragments
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.annotation.Nullable
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.example.testnewsapp.R
+import com.example.testnewsapp.adapter.NewsAdapter
+import com.example.testnewsapp.models.NewsHeadLines
+import com.example.testnewsapp.RequestManagerForNewsAPI
+import kotlin.collections.ArrayList
+
+class BusinessFragment : Fragment() {
+
+    lateinit var recyclerViewFromBusiness: RecyclerView;
+    lateinit var newsHeadLinesArrayList: ArrayList<NewsHeadLines>
+    lateinit var newsAdapter: NewsAdapter
+    var category: String = "business"
+
+    @Nullable
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        val view: View = inflater.inflate(R.layout.business_fragment, null)
+        recyclerViewFromBusiness = view.findViewById(R.id.recycler_view_of_business)
+        newsHeadLinesArrayList = ArrayList()
+        recyclerViewFromBusiness.layoutManager = LinearLayoutManager(context)
+        newsAdapter = NewsAdapter(context, newsHeadLinesArrayList)
+        recyclerViewFromBusiness.adapter = newsAdapter
+
+        val manager = RequestManagerForNewsAPI()
+        manager.findNews(context, category, newsHeadLinesArrayList, newsAdapter)
+        return view
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/sports_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/sports_fragment.xml b/app/src/main/res/layout/sports_fragment.xml
new file mode 100644
--- /dev/null	(date 1641215628563)
+++ b/app/src/main/res/layout/sports_fragment.xml	(date 1641215628563)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/recycler_view_of_sports"
+        android:layout_marginTop="2dp"
+        android:fitsSystemWindows="true"
+        android:padding="2dp">
+         
+    </androidx.recyclerview.widget.RecyclerView>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/health_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/health_fragment.xml b/app/src/main/res/layout/health_fragment.xml
new file mode 100644
--- /dev/null	(date 1641215628523)
+++ b/app/src/main/res/layout/health_fragment.xml	(date 1641215628523)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/recycler_view_of_health"
+        android:layout_marginTop="2dp"
+        android:fitsSystemWindows="true"
+        android:padding="2dp">
+         
+    </androidx.recyclerview.widget.RecyclerView>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/science_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/science_fragment.xml b/app/src/main/res/layout/science_fragment.xml
new file mode 100644
--- /dev/null	(date 1641470976587)
+++ b/app/src/main/res/layout/science_fragment.xml	(date 1641470976587)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/recycler_view_of_science"
+        android:layout_marginTop="2dp"
+        android:fitsSystemWindows="true"
+        android:padding="2dp">
+
+    </androidx.recyclerview.widget.RecyclerView>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/technology_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/technology_fragment.xml b/app/src/main/res/layout/technology_fragment.xml
new file mode 100644
--- /dev/null	(date 1641215628509)
+++ b/app/src/main/res/layout/technology_fragment.xml	(date 1641215628509)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/recycler_view_of_technology"
+        android:layout_marginTop="2dp"
+        android:fitsSystemWindows="true"
+        android:padding="2dp">
+         
+    </androidx.recyclerview.widget.RecyclerView>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/categoryFragments/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/categoryFragments/HomeFragment.kt b/app/src/main/java/com/example/testnewsapp/categoryFragments/HomeFragment.kt
new file mode 100644
--- /dev/null	(date 1641507373871)
+++ b/app/src/main/java/com/example/testnewsapp/categoryFragments/HomeFragment.kt	(date 1641507373871)
@@ -0,0 +1,42 @@
+package com.example.testnewsapp.categoryFragments
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.annotation.Nullable
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.example.testnewsapp.R
+import com.example.testnewsapp.RequestManagerForNewsAPI
+import com.example.testnewsapp.adapter.NewsAdapter
+import com.example.testnewsapp.models.NewsHeadLines
+
+
+class HomeFragment : Fragment() {
+
+    lateinit var newsEverythingArrayList: ArrayList<NewsHeadLines>
+    lateinit var recyclerViewFromHome: RecyclerView;
+    lateinit var newsAdapter: NewsAdapter
+
+    @Nullable
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+
+        val view: View = inflater.inflate(R.layout.home_fragment, null)
+        recyclerViewFromHome = view.findViewById(R.id.recycler_view_of_home)
+        newsEverythingArrayList = ArrayList()
+        recyclerViewFromHome.layoutManager = LinearLayoutManager(context)
+        newsAdapter = NewsAdapter(context, newsEverythingArrayList)
+        recyclerViewFromHome.adapter = newsAdapter
+
+        val manager = RequestManagerForNewsAPI()
+        manager.findNewsForEverything(context, newsEverythingArrayList, newsAdapter)
+        return view
+    }
+}
+
Index: app/src/main/res/layout/entertainment_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/entertainment_fragment.xml b/app/src/main/res/layout/entertainment_fragment.xml
new file mode 100644
--- /dev/null	(date 1641215628548)
+++ b/app/src/main/res/layout/entertainment_fragment.xml	(date 1641215628548)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/recycler_view_of_entertainment"
+        android:layout_marginTop="2dp"
+        android:fitsSystemWindows="true"
+        android:padding="2dp">
+
+    </androidx.recyclerview.widget.RecyclerView>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/business_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/business_fragment.xml b/app/src/main/res/layout/business_fragment.xml
new file mode 100644
--- /dev/null	(date 1641215628535)
+++ b/app/src/main/res/layout/business_fragment.xml	(date 1641215628535)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/recycler_view_of_business"
+        android:layout_marginTop="2dp"
+        android:fitsSystemWindows="true"
+        android:padding="2dp">
+
+    </androidx.recyclerview.widget.RecyclerView>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/InterfaceCallApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/InterfaceCallApi.kt b/app/src/main/java/com/example/testnewsapp/InterfaceCallApi.kt
new file mode 100644
--- /dev/null	(date 1641512967547)
+++ b/app/src/main/java/com/example/testnewsapp/InterfaceCallApi.kt	(date 1641512967547)
@@ -0,0 +1,31 @@
+package com.example.testnewsapp
+
+import com.example.testnewsapp.models.NewsApiResponse
+import org.intellij.lang.annotations.Language
+import retrofit2.Call
+import retrofit2.http.GET
+import retrofit2.http.Query
+
+interface InterfaceCallApi {
+
+
+
+    @GET("top-headlines")
+    fun callHeadLinesNews(
+        @Query("country") country: String,
+        @Query("category") category: String,
+        @Query("q") query: String?,
+        @Query("apiKey") api_key: String?,
+    ): Call<NewsApiResponse>
+    @GET("everything")
+    fun callEverything(
+        @Query("language") language: String,
+        @Query("pageSize") pageSize: Int,
+        @Query("apiKey") api_key: String,
+        @Query("q") query: String?
+    ): Call<NewsApiResponse>
+
+}
+
+
+
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
new file mode 100644
--- /dev/null	(date 1641501095716)
+++ b/app/src/main/res/values/strings.xml	(date 1641501095716)
@@ -0,0 +1,7 @@
+<resources>
+    <string name="app_name">TestNewsApp</string>
+    <string name="api_key">85eb2f4fdde34960a2ae4774d5808df5</string>
+    <string name="api_key2">6469c060fbb04ce5a6a896c2f19fb8b1</string>
+
+    <string name="text_title">The main title will be displayed here. This is true, but if it is too large, it will be partially hidden.</string>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
new file mode 100644
--- /dev/null	(date 1641238968611)
+++ b/app/src/main/res/values/themes.xml	(date 1641238968611)
@@ -0,0 +1,16 @@
+<resources xmlns:tools="http://schemas.android.com/tools">
+    <!-- Base application theme. -->
+    <style name="Theme.TestNewsApp" parent="Theme.MaterialComponents.DayNight.NoActionBar">
+        <!-- Primary brand color. -->
+        <item name="colorPrimary">@color/purple_500</item>
+        <item name="colorPrimaryVariant">@color/purple_700</item>
+        <item name="colorOnPrimary">@color/white</item>
+        <!-- Secondary brand color. -->
+        <item name="colorSecondary">@color/teal_200</item>
+        <item name="colorSecondaryVariant">@color/teal_700</item>
+        <item name="colorOnSecondary">@color/black</item>
+        <!-- Status bar color. -->
+        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
+        <!-- Customize your theme here. -->
+    </style>
+</resources>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_launcher_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_background.xml b/app/src/main/res/drawable/ic_launcher_background.xml
new file mode 100644
--- /dev/null	(date 1641210317803)
+++ b/app/src/main/res/drawable/ic_launcher_background.xml	(date 1641210317803)
@@ -0,0 +1,170 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path
+        android:fillColor="#3DDC84"
+        android:pathData="M0,0h108v108h-108z" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M9,0L9,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,0L19,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,0L29,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,0L39,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,0L49,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,0L59,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,0L69,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,0L79,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M89,0L89,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M99,0L99,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,9L108,9"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,19L108,19"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,29L108,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,39L108,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,49L108,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,59L108,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,69L108,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,79L108,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,89L108,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,99L108,99"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,29L89,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,39L89,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,49L89,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,59L89,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,69L89,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,79L89,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,19L29,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,19L39,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,19L49,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,19L59,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,19L69,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,19L79,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+</vector>
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
new file mode 100644
--- /dev/null	(date 1641210317866)
+++ b/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(date 1641210317866)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/drawable-v24/ic_launcher_foreground.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable-v24/ic_launcher_foreground.xml b/app/src/main/res/drawable-v24/ic_launcher_foreground.xml
new file mode 100644
--- /dev/null	(date 1641210317846)
+++ b/app/src/main/res/drawable-v24/ic_launcher_foreground.xml	(date 1641210317846)
@@ -0,0 +1,30 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
+        <aapt:attr name="android:fillColor">
+            <gradient
+                android:endX="85.84757"
+                android:endY="92.4963"
+                android:startX="42.9492"
+                android:startY="49.59793"
+                android:type="linear">
+                <item
+                    android:color="#44000000"
+                    android:offset="0.0" />
+                <item
+                    android:color="#00000000"
+                    android:offset="1.0" />
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path
+        android:fillColor="#FFFFFF"
+        android:fillType="nonZero"
+        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
+        android:strokeWidth="1"
+        android:strokeColor="#00000000" />
+</vector>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
new file mode 100644
--- /dev/null	(date 1641299617161)
+++ b/.idea/gradle.xml	(date 1641299617161)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="testRunner" value="GRADLE" />
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
+        <option name="resolveModulePerSourceSet" value="false" />
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1641471028883)
+++ b/.idea/misc.xml	(date 1641471028883)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DesignSurface">
+    <option name="filePathToZoomLevelMap">
+      <map>
+        <entry key="..\:/TestNewsApp/app/src/main/res/drawable-v24/ic_launcher_foreground.xml" value="0.2703125" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/drawable/ic_baseline_self_improvement_24.xml" value="0.2703125" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/drawable/ic_baseline_settings_24.xml" value="0.2703125" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/drawable/ic_launcher_background.xml" value="0.2703125" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/drawable/icon_draw.xml" value="0.2703125" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/activity_main.xml" value="0.264" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/activity_web_view.xml" value="0.13858695652173914" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/business_fragment.xml" value="0.1" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/businessfragment.xml" value="0.25416666666666665" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/entertainmentfragment.xml" value="0.25416666666666665" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/healthfragment.xml" value="0.25416666666666665" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/homefragment.xml" value="0.25416666666666665" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/item_layout.xml" value="0.264" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/science_fragment.xml" value="0.192481884057971" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/since_fragment.xml" value="0.1" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/sincefragment.xml" value="0.25416666666666665" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/sports_fragment.xml" value="0.13138686131386862" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/sportsfragment.xml" value="0.25416666666666665" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/technology_fragment.xml" value="0.25416666666666665" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/layout/technologyfragment.xml" value="0.25416666666666665" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml" value="0.2703125" />
+        <entry key="..\:/TestNewsApp/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml" value="0.2703125" />
+      </map>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1641210327923)
+++ b/.idea/.gitignore	(date 1641210327923)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1641210405026)
+++ b/.idea/compiler.xml	(date 1641210405026)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="11" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
new file mode 100644
--- /dev/null	(date 1641210318053)
+++ b/app/src/main/res/values/colors.xml	(date 1641210318053)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="purple_200">#FFBB86FC</color>
+    <color name="purple_500">#FF6200EE</color>
+    <color name="purple_700">#FF3700B3</color>
+    <color name="teal_200">#FF03DAC5</color>
+    <color name="teal_700">#FF018786</color>
+    <color name="black">#FF000000</color>
+    <color name="white">#FFFFFFFF</color>
+</resources>
\ No newline at end of file
Index: app/src/main/res/layout/activity_web_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_web_view.xml b/app/src/main/res/layout/activity_web_view.xml
new file mode 100644
--- /dev/null	(date 1641322208270)
+++ b/app/src/main/res/layout/activity_web_view.xml	(date 1641322208270)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".WebView">
+
+    <androidx.appcompat.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:layout_marginTop="0dp"
+        android:background="@color/white">
+
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:gravity="center_vertical">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Specific News"
+                android:textColor="@color/black"
+                android:textSize="20sp"
+                android:textStyle="bold">
+
+            </TextView>
+
+        </RelativeLayout>
+
+    </androidx.appcompat.widget.Toolbar>
+
+    <WebView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/web_view"
+        android:layout_below="@+id/toolbar">
+
+    </WebView>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
new file mode 100644
--- /dev/null	(date 1641465178147)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1641465178147)
@@ -0,0 +1,138 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".MainActivity">
+
+    <androidx.appcompat.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:layout_marginTop="0dp"
+        android:background="@color/white">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:gravity="center_vertical"
+            android:weightSum="7">
+
+            <ImageView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:src="@drawable/ic_baseline_self_improvement_24"
+                android:textColor="@color/black"
+                android:layout_weight="2"
+                android:textSize="20sp"
+                android:textStyle="bold"
+                android:padding="2dp">
+
+            </ImageView>
+
+            <EditText
+                android:id="@+id/main_search"
+                android:layout_width="290dp"
+                android:layout_height="40dp"
+                android:layout_weight="4"
+                android:textSize="14sp"
+                android:hint="Search..." />
+
+            <ImageButton
+                android:id="@+id/button_setting"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+
+                android:src="@drawable/ic_baseline_settings_24" />
+
+
+        </LinearLayout>
+
+
+    </androidx.appcompat.widget.Toolbar>
+
+    <com.google.android.material.tabs.TabLayout
+        android:id="@+id/include"
+        android:layout_width="match_parent"
+        android:layout_height="40dp"
+        android:layout_below="@+id/toolbar"
+        android:layout_marginTop="2dp"
+        android:backgroundTint="@color/white"
+        app:tabIndicatorColor="#03A9F4"
+        app:tabIndicatorHeight="2.5dp"
+        app:tabMode="scrollable"
+        app:tabSelectedTextColor="#03A9F4"
+        app:tabTextColor="#618C8F">
+
+        <com.google.android.material.tabs.TabItem
+            android:id="@+id/home"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Home">
+
+        </com.google.android.material.tabs.TabItem>
+
+        <com.google.android.material.tabs.TabItem
+            android:id="@+id/science"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Since">
+
+        </com.google.android.material.tabs.TabItem>
+
+        <com.google.android.material.tabs.TabItem
+            android:id="@+id/technology"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Technology">
+
+        </com.google.android.material.tabs.TabItem>
+
+        <com.google.android.material.tabs.TabItem
+            android:id="@+id/business"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Business">
+
+        </com.google.android.material.tabs.TabItem>
+
+        <com.google.android.material.tabs.TabItem
+            android:id="@+id/sports"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Sports">
+
+        </com.google.android.material.tabs.TabItem>
+
+        <com.google.android.material.tabs.TabItem
+            android:id="@+id/health"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Health">
+
+        </com.google.android.material.tabs.TabItem>
+
+        <com.google.android.material.tabs.TabItem
+            android:id="@+id/entertainment"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Entertainment">
+
+        </com.google.android.material.tabs.TabItem>
+
+
+    </com.google.android.material.tabs.TabLayout>
+
+    <androidx.viewpager.widget.ViewPager
+        android:id="@+id/fragment_container"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/include">
+
+
+    </androidx.viewpager.widget.ViewPager>
+
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/WebView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/WebView.kt b/app/src/main/java/com/example/testnewsapp/WebView.kt
new file mode 100644
--- /dev/null	(date 1641322746379)
+++ b/app/src/main/java/com/example/testnewsapp/WebView.kt	(date 1641322746379)
@@ -0,0 +1,31 @@
+package com.example.testnewsapp
+
+import android.content.Intent
+import android.os.Bundle
+import android.webkit.WebView
+import android.webkit.WebViewClient
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+
+
+class WebView : AppCompatActivity() {
+
+    lateinit var toolbar: Toolbar
+    lateinit var webView: WebView
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_web_view)
+
+        toolbar = findViewById(R.id.toolbar)
+        webView = findViewById(R.id.web_view)
+
+        setSupportActionBar(toolbar)
+
+        val intent: Intent = intent
+        val url: String = intent.getStringExtra("url").toString()
+
+        webView.webViewClient = WebViewClient()
+        webView.loadUrl(url)
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/home_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/home_fragment.xml b/app/src/main/res/layout/home_fragment.xml
new file mode 100644
--- /dev/null	(date 1641215426437)
+++ b/app/src/main/res/layout/home_fragment.xml	(date 1641215426437)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/recycler_view_of_home"
+        android:layout_marginTop="2dp"
+        android:fitsSystemWindows="true"
+        android:padding="2dp">
+
+    </androidx.recyclerview.widget.RecyclerView>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/MainActivity.kt b/app/src/main/java/com/example/testnewsapp/MainActivity.kt
new file mode 100644
--- /dev/null	(date 1641472577456)
+++ b/app/src/main/java/com/example/testnewsapp/MainActivity.kt	(date 1641472577456)
@@ -0,0 +1,72 @@
+package com.example.testnewsapp
+
+import androidx.appcompat.app.AppCompatActivity
+import android.os.Bundle
+import androidx.appcompat.widget.Toolbar
+import androidx.viewpager.widget.ViewPager
+import com.example.testnewsapp.adapter.PagerAdapter
+import com.google.android.material.tabs.TabItem
+import com.google.android.material.tabs.TabLayout
+
+class MainActivity : AppCompatActivity() {
+
+    lateinit var mToolbar: Toolbar
+
+    var mHome: TabItem? = null
+    var mScience: TabItem? = null
+    var mTechnology: TabItem? = null
+    var mBusiness: TabItem? = null
+    var mSports: TabItem? = null
+    var mHealth: TabItem? = null
+    var mEntertainment: TabItem? = null
+
+    lateinit var tabLayout: TabLayout
+    lateinit var pagerAdapter: PagerAdapter
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_main)
+
+
+        mToolbar = findViewById(R.id.toolbar)
+        setSupportActionBar(mToolbar)
+
+        mHome = findViewById(R.id.home)
+        mScience = findViewById(R.id.science)
+        mTechnology = findViewById(R.id.technology)
+        mBusiness = findViewById(R.id.business)
+        mSports = findViewById(R.id.sports)
+        mHealth = findViewById(R.id.health)
+        mEntertainment = findViewById(R.id.entertainment)
+
+
+        tabLayout = findViewById(R.id.include)
+
+        categorySwipe()
+    }
+
+    private fun categorySwipe() {
+        val viewPager: ViewPager = findViewById(R.id.fragment_container)
+        pagerAdapter = PagerAdapter(supportFragmentManager, 7)
+        viewPager.adapter = pagerAdapter
+
+        tabLayout.addOnTabSelectedListener(object : TabLayout.OnTabSelectedListener {
+            override fun onTabSelected(tab: TabLayout.Tab?) {
+                viewPager.currentItem = tab!!.position
+                if (tab.position == 0 || tab.position == 1 || tab.position == 2 || tab.position == 3 ||
+                    tab.position == 4 || tab.position == 5 || tab.position == 6
+                ) {
+                    pagerAdapter.notifyDataSetChanged()
+                }
+            }
+
+            override fun onTabUnselected(tab: TabLayout.Tab?) {
+            }
+
+            override fun onTabReselected(tab: TabLayout.Tab?) {
+            }
+
+        })
+        viewPager.addOnPageChangeListener(TabLayout.TabLayoutOnPageChangeListener(tabLayout))
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/item_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_layout.xml b/app/src/main/res/layout/item_layout.xml
new file mode 100644
--- /dev/null	(date 1641467043854)
+++ b/app/src/main/res/layout/item_layout.xml	(date 1641467043854)
@@ -0,0 +1,111 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="270dp">
+
+
+    <androidx.cardview.widget.CardView
+        android:id="@+id/cardView"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="2dp"
+        android:elevation="5dp"
+        android:padding="10dp"
+        app:cardCornerRadius="10dp">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical">
+
+            <TextView
+                android:id="@+id/item_title"
+                android:layout_width="match_parent"
+                android:layout_height="60dp"
+                android:ellipsize="end"
+                android:maxLines="2"
+                android:padding="5dp"
+                android:text="@string/text_title"
+                android:textColor="@color/black"
+                android:textSize="20sp"
+                android:textStyle="bold"></TextView>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="130dp"
+                android:layout_marginTop="10dp"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:id="@+id/item_description"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="0.8"
+                    android:ellipsize="end"
+                    android:maxLines="5"
+                    android:text="content"
+                    android:textSize="15sp"></TextView>
+
+                <ImageView
+                    android:id="@+id/item_image"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1"
+                    android:padding="5dp"
+                    android:scaleType="centerCrop"
+                    android:src="@drawable/ic_launcher_background"></ImageView>
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="10dp">
+
+                <TextView
+                    android:id="@+id/item_author"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="0.1"
+                    android:padding="5dp"
+                    android:text="By Tsekhmistrenko"
+                    android:textColor="@color/purple_200"
+                    android:textSize="13dp"
+                    android:textStyle="italic"></TextView>
+
+                <TextView
+                    android:id="@+id/item_source"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:padding="5dp"
+                    android:text="New Times"
+                    android:textColor="@color/purple_200"
+                    android:textSize="13dp"
+                    android:textStyle="bold">
+
+                </TextView>
+
+
+            </LinearLayout>
+
+
+            <TextView
+                android:id="@+id/item_publication_time"
+                android:layout_width="match_parent"
+
+                android:layout_height="wrap_content"
+                android:padding="5dp"
+                android:text="Published at:"
+                android:textColor="@color/black"
+                android:textSize="12sp"
+                android:textStyle="bold">
+
+            </TextView>
+
+        </LinearLayout>
+
+    </androidx.cardview.widget.CardView>
+
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
new file mode 100644
--- /dev/null	(date 1641337444475)
+++ b/app/src/main/AndroidManifest.xml	(date 1641337444475)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.testnewsapp">
+
+    <uses-permission android:name="android.permission.INTERNET" />
+
+    <application
+        android:allowBackup="true"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/Theme.TestNewsApp">
+        <activity
+            android:name=".WebView"
+            android:exported="false" />
+        <activity
+            android:name=".MainActivity"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
new file mode 100644
--- /dev/null	(date 1641293872250)
+++ b/app/build.gradle	(date 1641293872250)
@@ -0,0 +1,51 @@
+plugins {
+    id 'com.android.application'
+    id 'kotlin-android'
+}
+
+android {
+    compileSdk 32
+
+    defaultConfig {
+        applicationId "com.example.testnewsapp"
+        minSdk 23
+        targetSdk 32
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+    kotlinOptions {
+        jvmTarget = '1.8'
+    }
+}
+
+dependencies {
+
+    implementation 'androidx.core:core-ktx:1.7.0'
+    implementation 'androidx.appcompat:appcompat:1.4.0'
+    implementation 'com.google.android.material:material:1.4.0'
+    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
+    testImplementation 'junit:junit:4.+'
+    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
+
+    implementation 'com.android.support:cardview-v7:'
+    implementation 'com.android.support:design:'
+
+    implementation 'com.github.bumptech.glide:glide:4.12.0'
+    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
+    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
+
+}
\ No newline at end of file
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/.gitignore b/app/.gitignore
new file mode 100644
--- /dev/null	(date 1641210315359)
+++ b/app/.gitignore	(date 1641210315359)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/adapter/ViewHolder.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/adapter/ViewHolder.kt b/app/src/main/java/com/example/testnewsapp/adapter/ViewHolder.kt
new file mode 100644
--- /dev/null	(date 1641467688013)
+++ b/app/src/main/java/com/example/testnewsapp/adapter/ViewHolder.kt	(date 1641467688013)
@@ -0,0 +1,20 @@
+package com.example.testnewsapp.adapter
+
+import android.view.View
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.cardview.widget.CardView
+import androidx.recyclerview.widget.RecyclerView
+import com.example.testnewsapp.R
+
+class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
+
+    var iCardView: CardView = itemView.findViewById(R.id.cardView)
+
+    var iTitle: TextView = itemView.findViewById(R.id.item_title)
+    var iDescription: TextView = itemView.findViewById(R.id.item_description)
+    var iAuthor: TextView = itemView.findViewById(R.id.item_author)
+    var iPublicationTime: TextView = itemView.findViewById(R.id.item_publication_time)
+    var iSource: TextView = itemView.findViewById(R.id.item_source)
+    var iViewImage: ImageView = itemView.findViewById(R.id.item_image)
+}
\ No newline at end of file
Index: app/src/main/res/values-night/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-night/themes.xml b/app/src/main/res/values-night/themes.xml
new file mode 100644
--- /dev/null	(date 1641238997218)
+++ b/app/src/main/res/values-night/themes.xml	(date 1641238997218)
@@ -0,0 +1,16 @@
+<resources xmlns:tools="http://schemas.android.com/tools">
+    <!-- Base application theme. -->
+    <style name="Theme.TestNewsApp" parent="Theme.MaterialComponents.DayNight.NoActionBar">
+        <!-- Primary brand color. -->
+        <item name="colorPrimary">@color/purple_200</item>
+        <item name="colorPrimaryVariant">@color/purple_700</item>
+        <item name="colorOnPrimary">@color/black</item>
+        <!-- Secondary brand color. -->
+        <item name="colorSecondary">@color/teal_200</item>
+        <item name="colorSecondaryVariant">@color/teal_200</item>
+        <item name="colorOnSecondary">@color/black</item>
+        <!-- Status bar color. -->
+        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
+        <!-- Customize your theme here. -->
+    </style>
+</resources>
\ No newline at end of file
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew b/gradlew
new file mode 100644
--- /dev/null	(date 1641210313622)
+++ b/gradlew	(date 1641210313622)
@@ -0,0 +1,185 @@
+#!/usr/bin/env sh
+
+#
+# Copyright 2015 the original author or authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn () {
+    echo "$*"
+}
+
+die () {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+nonstop=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
+esac
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin or MSYS, switch paths to Windows format before running java
+if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=`expr $i + 1`
+    done
+    case $i in
+        0) set -- ;;
+        1) set -- "$args0" ;;
+        2) set -- "$args0" "$args1" ;;
+        3) set -- "$args0" "$args1" "$args2" ;;
+        4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Escape application args
+save () {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
+}
+APP_ARGS=`save "$@"`
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+exec "$JAVACMD" "$@"
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
--- /dev/null	(date 1641210321481)
+++ b/gradle/wrapper/gradle-wrapper.properties	(date 1641210321481)
@@ -0,0 +1,6 @@
+#Mon Jan 03 14:45:21 MSK 2022
+distributionBase=GRADLE_USER_HOME
+distributionUrl=https\://services.gradle.org/distributions/gradle-7.0.2-bin.zip
+distributionPath=wrapper/dists
+zipStorePath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew.bat b/gradlew.bat
new file mode 100644
--- /dev/null	(date 1641210313635)
+++ b/gradlew.bat	(date 1641210313635)
@@ -0,0 +1,89 @@
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      https://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
+
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Resolve any "." and ".." in APP_HOME to make it shorter.
+for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto execute
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto execute
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1641210313527)
+++ b/.gitignore	(date 1641210313527)
@@ -0,0 +1,15 @@
+*.iml
+.gradle
+/local.properties
+/.idea/caches
+/.idea/libraries
+/.idea/modules.xml
+/.idea/workspace.xml
+/.idea/navEditor.xml
+/.idea/assetWizardSettings.xml
+.DS_Store
+/build
+/captures
+.externalNativeBuild
+.cxx
+local.properties
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
new file mode 100644
--- /dev/null	(date 1641210315533)
+++ b/app/proguard-rules.pro	(date 1641210315533)
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
new file mode 100644
--- /dev/null	(date 1641210314854)
+++ b/build.gradle	(date 1641210314854)
@@ -0,0 +1,18 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+buildscript {
+    repositories {
+        google()
+        mavenCentral()
+    }
+    dependencies {
+        classpath "com.android.tools.build:gradle:7.0.4"
+        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
\ No newline at end of file
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/gradle.properties b/gradle.properties
new file mode 100644
--- /dev/null	(date 1641210315079)
+++ b/gradle.properties	(date 1641210315079)
@@ -0,0 +1,21 @@
+# Project-wide Gradle settings.
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
+# AndroidX package structure to make it clearer which packages are bundled with the
+# Android operating system, and which are packaged with your app"s APK
+# https://developer.android.com/topic/libraries/support-library/androidx-rn
+android.useAndroidX=true
+# Automatically convert third-party libraries to use AndroidX
+android.enableJetifier=true
+# Kotlin code style for this project: "official" or "obsolete":
+kotlin.code.style=official
\ No newline at end of file
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle b/settings.gradle
new file mode 100644
--- /dev/null	(date 1641210316573)
+++ b/settings.gradle	(date 1641210316573)
@@ -0,0 +1,10 @@
+dependencyResolutionManagement {
+    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
+    repositories {
+        google()
+        mavenCentral()
+        jcenter() // Warning: this repository is going to shut down soon
+    }
+}
+rootProject.name = "TestNewsApp"
+include ':app'
Index: app/src/main/java/com/example/testnewsapp/adapter/NewsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/adapter/NewsAdapter.kt b/app/src/main/java/com/example/testnewsapp/adapter/NewsAdapter.kt
new file mode 100644
--- /dev/null	(date 1641494969052)
+++ b/app/src/main/java/com/example/testnewsapp/adapter/NewsAdapter.kt	(date 1641494969052)
@@ -0,0 +1,46 @@
+package com.example.testnewsapp.adapter
+
+import android.content.Context
+import android.content.Intent
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.example.testnewsapp.R
+import com.example.testnewsapp.WebView
+import com.example.testnewsapp.models.NewsHeadLines
+
+
+class NewsAdapter(var context: Context?, var newsHLArrayList: ArrayList<NewsHeadLines>) :
+    RecyclerView.Adapter<ViewHolder>() {
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+        return ViewHolder(
+            LayoutInflater.from(context)
+                .inflate(R.layout.item_layout, parent, false)
+        )
+    }
+
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+        holder.iCardView.setOnClickListener {
+            val intent: Intent = Intent(context, WebView::class.java)
+            intent.putExtra("url", newsHLArrayList[position].url)
+            context?.startActivity(intent)
+        }
+
+        holder.iTitle.text = newsHLArrayList[position].title
+        holder.iDescription.text = newsHLArrayList[position].description
+        holder.iAuthor.text = newsHLArrayList[position].author
+        holder.iSource.text = newsHLArrayList[position].source!!.name
+
+        Glide.with(context!!).load(newsHLArrayList[position].urlToImage).into(holder.iViewImage)
+
+        val time = "Published At:" + newsHLArrayList[position].publishedAt!!.substring(0..9) +
+                " " + newsHLArrayList[position].publishedAt!!.substring(11..15)
+        holder.iPublicationTime.text = time
+    }
+
+    override fun getItemCount(): Int {
+        return newsHLArrayList.size
+    }
+}
\ No newline at end of file
Index: app/src/test/java/com/example/testnewsapp/ExampleUnitTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/com/example/testnewsapp/ExampleUnitTest.kt b/app/src/test/java/com/example/testnewsapp/ExampleUnitTest.kt
new file mode 100644
--- /dev/null	(date 1641210317066)
+++ b/app/src/test/java/com/example/testnewsapp/ExampleUnitTest.kt	(date 1641210317066)
@@ -0,0 +1,17 @@
+package com.example.testnewsapp
+
+import org.junit.Test
+
+import org.junit.Assert.*
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+class ExampleUnitTest {
+    @Test
+    fun addition_isCorrect() {
+        assertEquals(4, 2 + 2)
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/ic_baseline_settings_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_settings_24.xml b/app/src/main/res/drawable/ic_baseline_settings_24.xml
new file mode 100644
--- /dev/null	(date 1641337733616)
+++ b/app/src/main/res/drawable/ic_baseline_settings_24.xml	(date 1641337733616)
@@ -0,0 +1,5 @@
+<vector android:height="30dp" android:tint="#464292"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="30dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M19.14,12.94c0.04,-0.3 0.06,-0.61 0.06,-0.94c0,-0.32 -0.02,-0.64 -0.07,-0.94l2.03,-1.58c0.18,-0.14 0.23,-0.41 0.12,-0.61l-1.92,-3.32c-0.12,-0.22 -0.37,-0.29 -0.59,-0.22l-2.39,0.96c-0.5,-0.38 -1.03,-0.7 -1.62,-0.94L14.4,2.81c-0.04,-0.24 -0.24,-0.41 -0.48,-0.41h-3.84c-0.24,0 -0.43,0.17 -0.47,0.41L9.25,5.35C8.66,5.59 8.12,5.92 7.63,6.29L5.24,5.33c-0.22,-0.08 -0.47,0 -0.59,0.22L2.74,8.87C2.62,9.08 2.66,9.34 2.86,9.48l2.03,1.58C4.84,11.36 4.8,11.69 4.8,12s0.02,0.64 0.07,0.94l-2.03,1.58c-0.18,0.14 -0.23,0.41 -0.12,0.61l1.92,3.32c0.12,0.22 0.37,0.29 0.59,0.22l2.39,-0.96c0.5,0.38 1.03,0.7 1.62,0.94l0.36,2.54c0.05,0.24 0.24,0.41 0.48,0.41h3.84c0.24,0 0.44,-0.17 0.47,-0.41l0.36,-2.54c0.59,-0.24 1.13,-0.56 1.62,-0.94l2.39,0.96c0.22,0.08 0.47,0 0.59,-0.22l1.92,-3.32c0.12,-0.22 0.07,-0.47 -0.12,-0.61L19.14,12.94zM12,15.6c-1.98,0 -3.6,-1.62 -3.6,-3.6s1.62,-3.6 3.6,-3.6s3.6,1.62 3.6,3.6S13.98,15.6 12,15.6z"/>
+</vector>
Index: app/src/main/res/drawable/ic_baseline_self_improvement_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_self_improvement_24.xml b/app/src/main/res/drawable/ic_baseline_self_improvement_24.xml
new file mode 100644
--- /dev/null	(date 1641337753707)
+++ b/app/src/main/res/drawable/ic_baseline_self_improvement_24.xml	(date 1641337753707)
@@ -0,0 +1,6 @@
+<vector android:height="60dp" android:tint="#2B2592"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="60dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M12,6m-2,0a2,2 0,1 1,4 0a2,2 0,1 1,-4 0"/>
+    <path android:fillColor="@android:color/white" android:pathData="M21,16v-2c-2.24,0 -4.16,-0.96 -5.6,-2.68l-1.34,-1.6C13.68,9.26 13.12,9 12.53,9h-1.05c-0.59,0 -1.15,0.26 -1.53,0.72l-1.34,1.6C7.16,13.04 5.24,14 3,14v2c2.77,0 5.19,-1.17 7,-3.25V15l-3.88,1.55C5.45,16.82 5,17.48 5,18.21C5,19.2 5.8,20 6.79,20H9v-0.5c0,-1.38 1.12,-2.5 2.5,-2.5h3c0.28,0 0.5,0.22 0.5,0.5S14.78,18 14.5,18h-3c-0.83,0 -1.5,0.67 -1.5,1.5V20h7.21C18.2,20 19,19.2 19,18.21c0,-0.73 -0.45,-1.39 -1.12,-1.66L14,15v-2.25C15.81,14.83 18.23,16 21,16z"/>
+</vector>
Index: app/src/androidTest/java/com/example/testnewsapp/ExampleInstrumentedTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/testnewsapp/ExampleInstrumentedTest.kt b/app/src/androidTest/java/com/example/testnewsapp/ExampleInstrumentedTest.kt
new file mode 100644
--- /dev/null	(date 1641210317013)
+++ b/app/src/androidTest/java/com/example/testnewsapp/ExampleInstrumentedTest.kt	(date 1641210317013)
@@ -0,0 +1,24 @@
+package com.example.testnewsapp
+
+import androidx.test.platform.app.InstrumentationRegistry
+import androidx.test.ext.junit.runners.AndroidJUnit4
+
+import org.junit.Test
+import org.junit.runner.RunWith
+
+import org.junit.Assert.*
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+@RunWith(AndroidJUnit4::class)
+class ExampleInstrumentedTest {
+    @Test
+    fun useAppContext() {
+        // Context of the app under test.
+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext
+        assertEquals("com.example.testnewsapp", appContext.packageName)
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/categoryFragments/EntertainmentFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/categoryFragments/EntertainmentFragment.kt b/app/src/main/java/com/example/testnewsapp/categoryFragments/EntertainmentFragment.kt
new file mode 100644
--- /dev/null	(date 1641503041823)
+++ b/app/src/main/java/com/example/testnewsapp/categoryFragments/EntertainmentFragment.kt	(date 1641503041823)
@@ -0,0 +1,41 @@
+package com.example.testnewsapp.categoryFragments
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.annotation.Nullable
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.example.testnewsapp.R
+import com.example.testnewsapp.adapter.NewsAdapter
+import com.example.testnewsapp.models.NewsHeadLines
+import com.example.testnewsapp.RequestManagerForNewsAPI
+import kotlin.collections.ArrayList
+
+class EntertainmentFragment : Fragment() {
+
+    lateinit var newsHeadLinesArrayList: ArrayList<NewsHeadLines>
+    lateinit var recyclerViewFromEntertainment: RecyclerView;
+    lateinit var newsAdapter: NewsAdapter
+    var category: String = "entertainment"
+
+    @Nullable
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        val view: View = inflater.inflate(R.layout.entertainment_fragment, null)
+        recyclerViewFromEntertainment = view.findViewById(R.id.recycler_view_of_entertainment)
+        newsHeadLinesArrayList = ArrayList()
+        recyclerViewFromEntertainment.layoutManager = LinearLayoutManager(context)
+        newsAdapter = NewsAdapter(context, newsHeadLinesArrayList)
+        recyclerViewFromEntertainment.adapter = newsAdapter
+
+        val manager = RequestManagerForNewsAPI()
+        manager.findNews(context, category, newsHeadLinesArrayList, newsAdapter)
+        return view
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/categoryFragments/HealthFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/categoryFragments/HealthFragment.kt b/app/src/main/java/com/example/testnewsapp/categoryFragments/HealthFragment.kt
new file mode 100644
--- /dev/null	(date 1641503041788)
+++ b/app/src/main/java/com/example/testnewsapp/categoryFragments/HealthFragment.kt	(date 1641503041788)
@@ -0,0 +1,41 @@
+package com.example.testnewsapp.categoryFragments
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.annotation.Nullable
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.example.testnewsapp.R
+import com.example.testnewsapp.adapter.NewsAdapter
+import com.example.testnewsapp.models.NewsHeadLines
+import com.example.testnewsapp.RequestManagerForNewsAPI
+import kotlin.collections.ArrayList
+
+class HealthFragment : Fragment() {
+
+    lateinit var newsHeadLinesArrayList: ArrayList<NewsHeadLines>
+    lateinit var recyclerViewFromHealth: RecyclerView;
+    lateinit var newsAdapter: NewsAdapter
+    var category: String = "health"
+
+    @Nullable
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        val view: View = inflater.inflate(R.layout.health_fragment, null)
+        recyclerViewFromHealth = view.findViewById(R.id.recycler_view_of_health)
+        newsHeadLinesArrayList = ArrayList()
+        recyclerViewFromHealth.layoutManager = LinearLayoutManager(context)
+        newsAdapter = NewsAdapter(context, newsHeadLinesArrayList)
+        recyclerViewFromHealth.adapter = newsAdapter
+
+        val manager = RequestManagerForNewsAPI()
+        manager.findNews(context, category, newsHeadLinesArrayList, newsAdapter)
+        return view
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/categoryFragments/TechnologyFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/categoryFragments/TechnologyFragment.kt b/app/src/main/java/com/example/testnewsapp/categoryFragments/TechnologyFragment.kt
new file mode 100644
--- /dev/null	(date 1641503041750)
+++ b/app/src/main/java/com/example/testnewsapp/categoryFragments/TechnologyFragment.kt	(date 1641503041750)
@@ -0,0 +1,41 @@
+package com.example.testnewsapp.categoryFragments
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.annotation.Nullable
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.example.testnewsapp.R
+import com.example.testnewsapp.adapter.NewsAdapter
+import com.example.testnewsapp.models.NewsHeadLines
+import com.example.testnewsapp.RequestManagerForNewsAPI
+import kotlin.collections.ArrayList
+
+class TechnologyFragment : Fragment() {
+
+    lateinit var newsHeadLinesArrayList: ArrayList<NewsHeadLines>
+    lateinit var recyclerViewFromTechnology: RecyclerView;
+    lateinit var newsAdapter: NewsAdapter
+    var category: String = "technology"
+
+    @Nullable
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        val view: View = inflater.inflate(R.layout.technology_fragment, null)
+        recyclerViewFromTechnology = view.findViewById(R.id.recycler_view_of_technology)
+        newsHeadLinesArrayList = ArrayList()
+        recyclerViewFromTechnology.layoutManager = LinearLayoutManager(context)
+        newsAdapter = NewsAdapter(context, newsHeadLinesArrayList)
+        recyclerViewFromTechnology.adapter = newsAdapter
+
+        val manager = RequestManagerForNewsAPI()
+        manager.findNews(context, category, newsHeadLinesArrayList, newsAdapter)
+        return view
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/models/ModelTopHeadLines.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/models/ModelTopHeadLines.kt b/app/src/main/java/com/example/testnewsapp/models/ModelTopHeadLines.kt
new file mode 100644
--- /dev/null	(date 1641472823541)
+++ b/app/src/main/java/com/example/testnewsapp/models/ModelTopHeadLines.kt	(date 1641472823541)
@@ -0,0 +1,27 @@
+package com.example.testnewsapp.models
+
+class NewsApiResponse {
+
+    var status: String? = null
+    var totalResults: Int? = null
+    var articles: ArrayList<NewsHeadLines>? = null
+}
+
+class Source {
+
+    var id: String? = null
+    var name: String? = null
+}
+
+class NewsHeadLines {
+
+    var source: Source? = null
+
+    var author: String? = null
+    var title: String? = null
+    var description: String? = null
+    var url: String? = null
+    var urlToImage: String? = null
+    var publishedAt: String? = null
+    var content: String? = null
+}
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/categoryFragments/SportsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/categoryFragments/SportsFragment.kt b/app/src/main/java/com/example/testnewsapp/categoryFragments/SportsFragment.kt
new file mode 100644
--- /dev/null	(date 1641503041440)
+++ b/app/src/main/java/com/example/testnewsapp/categoryFragments/SportsFragment.kt	(date 1641503041440)
@@ -0,0 +1,41 @@
+package com.example.testnewsapp.categoryFragments
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.annotation.Nullable
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.example.testnewsapp.R
+import com.example.testnewsapp.adapter.NewsAdapter
+import com.example.testnewsapp.models.NewsHeadLines
+import com.example.testnewsapp.RequestManagerForNewsAPI
+import kotlin.collections.ArrayList
+
+class SportsFragment : Fragment() {
+
+    lateinit var newsHeadLinesArrayList: ArrayList<NewsHeadLines>
+    lateinit var recyclerViewFromSports: RecyclerView;
+    lateinit var newsAdapter: NewsAdapter
+    var category: String = "sports"
+
+    @Nullable
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        val view: View = inflater.inflate(R.layout.sports_fragment, null)
+        recyclerViewFromSports = view.findViewById(R.id.recycler_view_of_sports)
+        newsHeadLinesArrayList = ArrayList()
+        recyclerViewFromSports.layoutManager = LinearLayoutManager(context)
+        newsAdapter = NewsAdapter(context, newsHeadLinesArrayList)
+        recyclerViewFromSports.adapter = newsAdapter
+
+        val manager = RequestManagerForNewsAPI()
+        manager.findNews(context, category, newsHeadLinesArrayList, newsAdapter)
+        return view
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/adapter/PagerAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/adapter/PagerAdapter.kt b/app/src/main/java/com/example/testnewsapp/adapter/PagerAdapter.kt
new file mode 100644
--- /dev/null	(date 1641472297874)
+++ b/app/src/main/java/com/example/testnewsapp/adapter/PagerAdapter.kt	(date 1641472297874)
@@ -0,0 +1,28 @@
+package com.example.testnewsapp.adapter
+
+import androidx.fragment.app.Fragment
+import androidx.fragment.app.FragmentManager
+import androidx.fragment.app.FragmentPagerAdapter
+import com.example.testnewsapp.categoryFragments.*
+
+
+class PagerAdapter(fm: FragmentManager, behavior: Int, private var tabCount: Int = behavior) :
+    FragmentPagerAdapter(fm, behavior) {
+
+    override fun getItem(position: Int): Fragment {
+        return when (position) {
+            0 -> HomeFragment()
+            1 -> ScienceFragment()
+            2 -> TechnologyFragment()
+            3 -> BusinessFragment()
+            4 -> SportsFragment()
+            5 -> HealthFragment()
+            6 -> EntertainmentFragment()
+            else -> HomeFragment()
+        }
+    }
+
+    override fun getCount(): Int {
+        return tabCount
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/testnewsapp/APIUtilities.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testnewsapp/APIUtilities.kt b/app/src/main/java/com/example/testnewsapp/APIUtilities.kt
new file mode 100644
--- /dev/null	(date 1641513007349)
+++ b/app/src/main/java/com/example/testnewsapp/APIUtilities.kt	(date 1641513007349)
@@ -0,0 +1,106 @@
+package com.example.testnewsapp
+
+import android.content.Context
+import android.widget.Toast
+import com.example.testnewsapp.adapter.NewsAdapter
+import com.example.testnewsapp.models.NewsApiResponse
+import com.example.testnewsapp.models.NewsHeadLines
+import retrofit2.*
+import retrofit2.converter.gson.GsonConverterFactory
+import java.io.IOException
+import com.google.gson.GsonBuilder
+
+import com.google.gson.Gson
+
+
+
+
+class RequestManagerForNewsAPI {
+    private var retrofit: Retrofit? = null
+
+    fun findNews(
+        context: Context?,
+        category: String,
+        list: ArrayList<NewsHeadLines>,
+        newsAdapter: NewsAdapter
+    ) {
+        val country = getCountry()
+        var key: String = context!!.getString(R.string.api_key2);
+
+        val call = getInterfaceAPI()!!
+            .callHeadLinesNews(country, category, null, key)
+
+        call.enqueue(object : Callback<NewsApiResponse> {
+            override fun onResponse(
+                call: Call<NewsApiResponse>,
+                response: Response<NewsApiResponse>
+            ) {
+                if (response.isSuccessful) {
+                    list.addAll(response.body()!!.articles!!)
+                    newsAdapter.notifyDataSetChanged()
+                } else {
+                    Toast.makeText(context, "Unsuccessful API response", Toast.LENGTH_LONG).show()
+                }
+            }
+
+            override fun onFailure(call: Call<NewsApiResponse>, t: Throwable) {
+                Toast.makeText(context, "API response error", Toast.LENGTH_LONG).show()
+            }
+        })
+    }
+
+
+
+    private fun getCountry(): String {
+        return "ru"
+
+        // some code
+    }
+
+
+
+    fun findNewsForEverything(
+        context: Context?,
+        list: ArrayList<NewsHeadLines>,
+        newsAdapter: NewsAdapter
+    ) {
+        var key: String = context!!.getString(R.string.api_key2);
+        val language: String = "en"
+
+        val call = getInterfaceAPI()!!
+            .callEverything("en",20 , key, null)
+
+        call.enqueue(object : Callback<NewsApiResponse> {
+            override fun onResponse(
+                call: Call<NewsApiResponse>,
+                response: Response<NewsApiResponse>
+            ) {
+                val statusCode = response.code()
+
+                if (response.isSuccessful) {
+                    list.addAll(response.body()!!.articles!!)
+                    newsAdapter.notifyDataSetChanged()
+                }
+
+                else {
+                        Toast.makeText(context, "$statusCode Bad request", Toast.LENGTH_LONG)
+                            .show()
+                    }
+            }
+
+            override fun onFailure(call: Call<NewsApiResponse>, t: Throwable) {
+                Toast.makeText(context, "API response error", Toast.LENGTH_LONG).show()
+            }
+        })
+    }
+
+    private fun getInterfaceAPI(): InterfaceCallApi? {
+        if (retrofit === null) {
+            retrofit = Retrofit.Builder().baseUrl("https://newsapi.org/v2/")
+                .addConverterFactory(GsonConverterFactory.create()).build()
+        }
+        return retrofit!!.create(InterfaceCallApi::class.java)
+    }
+}
+
+
